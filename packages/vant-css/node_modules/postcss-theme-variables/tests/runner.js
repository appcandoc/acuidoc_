const postcss = require('postcss');
const precss = require('precss');
const easyImport = require('postcss-easy-import');
const fs = require('fs');
const path = require('path');
const themeVariables = require('../src/index');

const vars = {
  'border-color': '#e5e5e5',
  'padding-size': '10px'
};

function readFile(...args) {
  return new Promise((resolve, reject) => {
    fs.readFile(...args, (err, content) => {
      if (err) {
        reject(err);
      }

      resolve(content);
    });
  });
}

function runTestWithPlugins(name, plugins) {
  return readFile(path.resolve(__dirname, 'index.css')).then(css => {
    return postcss(plugins)
      .process(css, { from: 'tests/index.css', to: 'tests/fixture.css' })
      .then(result => {
        return readFile(
          path.resolve(__dirname, 'fixture.css')
        ).then(fixture => {
          if (fixture.toString() !== result.css) {
            fs.writeFile(path.resolve(__dirname, `failure-${name}.css`), result.css);
            throw `Tests failed: ${name}`;
          }
        });
      });
  });
}

Promise.all([
  runTestWithPlugins('easy-import', [
    easyImport({ prefix: '_' }),
    themeVariables({ vars, prefix: '$' }),
    precss()
  ]),

  runTestWithPlugins('precss', [
    themeVariables({ vars }),
    precss({
      import: {
        plugins: [themeVariables({ vars, prefix: '$' })]
      }
    })
  ])
]).then(() => {
  console.log('All tests passed');
}, err => {
  console.error(err);
});
